{
    "test_scenarios": [
        {
            "name": "all-groups-preserve-dir-output-dir",
            "description": "Test cloning all groups with preserve dir and output dir",
            "command": "ghorg clone all-groups --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --output-dir=local-gitlab-latest-repos",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-latest-repos/local-gitlab-group1/baz0",
                "local-gitlab-latest-repos/local-gitlab-group1/baz1",
                "local-gitlab-latest-repos/local-gitlab-group1/baz2",
                "local-gitlab-latest-repos/local-gitlab-group1/baz3",
                "local-gitlab-latest-repos/local-gitlab-group2/baz0",
                "local-gitlab-latest-repos/local-gitlab-group2/baz1",
                "local-gitlab-latest-repos/local-gitlab-group2/baz2",
                "local-gitlab-latest-repos/local-gitlab-group2/baz3",
                "local-gitlab-latest-repos/local-gitlab-group3/subgroup-a/subgroup-b",
                "local-gitlab-latest-repos/local-gitlab-group3/subgroup-a/subgroup_a_repo_0",
                "local-gitlab-latest-repos/local-gitlab-group3/subgroup-a/subgroup_a_repo_1",
                "local-gitlab-latest-repos/local-gitlab-group3/subgroup-a/subgroup_a_repo_2",
                "local-gitlab-latest-repos/local-gitlab-group3/subgroup-a/subgroup_a_repo_3"
            ]
        },
        {
            "name": "all-groups-preserve-dir-output-dir-snippets",
            "description": "Test cloning all groups with preserve dir, output dir, and snippets",
            "command": "ghorg clone all-groups --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --output-dir=local-gitlab-latest-repos-snippets --clone-snippets",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-latest-repos-snippets/_ghorg_root_level_snippets",
                "local-gitlab-latest-repos-snippets/local-gitlab-group1/baz0",
                "local-gitlab-latest-repos-snippets/local-gitlab-group1/baz1",
                "local-gitlab-latest-repos-snippets/local-gitlab-group1/baz2",
                "local-gitlab-latest-repos-snippets/local-gitlab-group1/baz3",
                "local-gitlab-latest-repos-snippets/local-gitlab-group2/baz0",
                "local-gitlab-latest-repos-snippets/local-gitlab-group2/baz0.snippets",
                "local-gitlab-latest-repos-snippets/local-gitlab-group2/baz1",
                "local-gitlab-latest-repos-snippets/local-gitlab-group2/baz1.snippets",
                "local-gitlab-latest-repos-snippets/local-gitlab-group2/baz2",
                "local-gitlab-latest-repos-snippets/local-gitlab-group2/baz2.snippets",
                "local-gitlab-latest-repos-snippets/local-gitlab-group2/baz3",
                "local-gitlab-latest-repos-snippets/local-gitlab-group2/baz3.snippets",
                "local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup-b",
                "local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_0",
                "local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_0.snippets",
                "local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_1",
                "local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_1.snippets",
                "local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_2",
                "local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_2.snippets",
                "local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_3",
                "local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_3.snippets"
            ]
        },
        {
            "name": "all-groups-preserve-dir-output-dir-snippets-preserve-scm-hostname",
            "description": "Test cloning all groups with preserve dir, output dir, snippets, and preserve SCM hostname",
            "command": "ghorg clone all-groups --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --output-dir=local-gitlab-latest-repos-snippets --clone-snippets --preserve-scm-hostname",
            "run_twice": true,
            "expected_structure": [
                "gitlab.example.com/local-gitlab-latest-repos-snippets/_ghorg_root_level_snippets",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group1/baz0",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group1/baz1",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group1/baz2",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group1/baz3",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group2/baz0",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group2/baz0.snippets",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group2/baz1",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group2/baz1.snippets",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group2/baz2",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group2/baz2.snippets",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group2/baz3",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group2/baz3.snippets",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup-b",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_0",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_0.snippets",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_1",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_1.snippets",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_2",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_2.snippets",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_3",
                "gitlab.example.com/local-gitlab-latest-repos-snippets/local-gitlab-group3/subgroup-a/subgroup_a_repo_3.snippets"
            ]
        },
        {
            "name": "all-groups-preserve-dir-no-output",
            "description": "Test cloning all groups with preserve dir and no output dir",
            "command": "ghorg clone all-groups --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir",
            "run_twice": true,
            "expected_structure": [
                "gitlab.example.com/local-gitlab-group1/baz0",
                "gitlab.example.com/local-gitlab-group1/baz1",
                "gitlab.example.com/local-gitlab-group1/baz2",
                "gitlab.example.com/local-gitlab-group1/baz3"
            ]
        },
        {
            "name": "all-groups-flat-output-dir",
            "description": "Test cloning all groups to flat output directory",
            "command": "ghorg clone all-groups --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --output-dir=local-gitlab-latest-repos-flat",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-latest-repos-flat/local-gitlab-group1_baz0",
                "local-gitlab-latest-repos-flat/local-gitlab-group1_baz1",
                "local-gitlab-latest-repos-flat/local-gitlab-group1_baz2",
                "local-gitlab-latest-repos-flat/local-gitlab-group1_baz3",
                "local-gitlab-latest-repos-flat/local-gitlab-group2_baz0",
                "local-gitlab-latest-repos-flat/local-gitlab-group2_baz1",
                "local-gitlab-latest-repos-flat/local-gitlab-group2_baz2",
                "local-gitlab-latest-repos-flat/local-gitlab-group2_baz3",
                "local-gitlab-latest-repos-flat/subgroup_a_repo_0",
                "local-gitlab-latest-repos-flat/subgroup_a_repo_1",
                "local-gitlab-latest-repos-flat/subgroup_a_repo_2",
                "local-gitlab-latest-repos-flat/subgroup_a_repo_3",
                "local-gitlab-latest-repos-flat/subgroup_b_repo_0",
                "local-gitlab-latest-repos-flat/subgroup_b_repo_1",
                "local-gitlab-latest-repos-flat/subgroup_b_repo_2",
                "local-gitlab-latest-repos-flat/subgroup_b_repo_3"
            ]
        },
        {
            "name": "all-groups-flat-snippets",
            "description": "Test cloning all groups to flat output directory with snippets",
            "command": "ghorg clone all-groups --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --output-dir=local-gitlab-latest-repos-all-groups-snippets --clone-snippets",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-latest-repos-all-groups-snippets/_ghorg_root_level_snippets",
                "local-gitlab-latest-repos-all-groups-snippets/local-gitlab-group1_baz0",
                "local-gitlab-latest-repos-all-groups-snippets/local-gitlab-group1_baz1",
                "local-gitlab-latest-repos-all-groups-snippets/local-gitlab-group1_baz2",
                "local-gitlab-latest-repos-all-groups-snippets/local-gitlab-group1_baz3",
                "local-gitlab-latest-repos-all-groups-snippets/local-gitlab-group2_baz0",
                "local-gitlab-latest-repos-all-groups-snippets/local-gitlab-group2_baz0.snippets",
                "local-gitlab-latest-repos-all-groups-snippets/local-gitlab-group2_baz1",
                "local-gitlab-latest-repos-all-groups-snippets/local-gitlab-group2_baz1.snippets",
                "local-gitlab-latest-repos-all-groups-snippets/local-gitlab-group2_baz2",
                "local-gitlab-latest-repos-all-groups-snippets/local-gitlab-group2_baz2.snippets",
                "local-gitlab-latest-repos-all-groups-snippets/local-gitlab-group2_baz3",
                "local-gitlab-latest-repos-all-groups-snippets/local-gitlab-group2_baz3.snippets",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_a_repo_0",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_a_repo_0.snippets",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_a_repo_1",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_a_repo_1.snippets",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_a_repo_2",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_a_repo_2.snippets",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_a_repo_3",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_a_repo_3.snippets",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_b_repo_0",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_b_repo_0.snippets",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_b_repo_1",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_b_repo_1.snippets",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_b_repo_2",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_b_repo_2.snippets",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_b_repo_3",
                "local-gitlab-latest-repos-all-groups-snippets/subgroup_b_repo_3.snippets"
            ]
        },
        {
            "name": "all-groups-clone-wiki",
            "description": "Test cloning all groups with wiki",
            "command": "ghorg clone all-groups --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --clone-wiki --output-dir=local-gitlab-latest-repos-flat-wiki",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group1_baz0",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group1_baz0.wiki",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group1_baz1",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group1_baz1.wiki",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group1_baz2",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group1_baz2.wiki",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group1_baz3",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group1_baz3.wiki",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group2_baz0",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group2_baz0.wiki",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group2_baz1",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group2_baz1.wiki",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group2_baz2",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group2_baz2.wiki",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group2_baz3",
                "local-gitlab-latest-repos-flat-wiki/local-gitlab-group2_baz3.wiki",
                "local-gitlab-latest-repos-flat-wiki/subgroup_a_repo_0",
                "local-gitlab-latest-repos-flat-wiki/subgroup_a_repo_0.wiki",
                "local-gitlab-latest-repos-flat-wiki/subgroup_a_repo_1",
                "local-gitlab-latest-repos-flat-wiki/subgroup_a_repo_1.wiki",
                "local-gitlab-latest-repos-flat-wiki/subgroup_a_repo_2",
                "local-gitlab-latest-repos-flat-wiki/subgroup_a_repo_2.wiki",
                "local-gitlab-latest-repos-flat-wiki/subgroup_a_repo_3",
                "local-gitlab-latest-repos-flat-wiki/subgroup_a_repo_3.wiki",
                "local-gitlab-latest-repos-flat-wiki/subgroup_b_repo_0",
                "local-gitlab-latest-repos-flat-wiki/subgroup_b_repo_0.wiki",
                "local-gitlab-latest-repos-flat-wiki/subgroup_b_repo_1",
                "local-gitlab-latest-repos-flat-wiki/subgroup_b_repo_1.wiki",
                "local-gitlab-latest-repos-flat-wiki/subgroup_b_repo_2",
                "local-gitlab-latest-repos-flat-wiki/subgroup_b_repo_2.wiki",
                "local-gitlab-latest-repos-flat-wiki/subgroup_b_repo_3",
                "local-gitlab-latest-repos-flat-wiki/subgroup_b_repo_3.wiki"
            ]
        },
        {
            "name": "all-groups-flat-wiki-snippets",
            "description": "Test cloning all groups with wiki and snippets to flat output directory",
            "command": "ghorg clone all-groups --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --clone-wiki --clone-snippets --output-dir=local-gitlab-latest-repos-flat-wiki-snippets",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-latest-repos-flat-wiki-snippets/_ghorg_root_level_snippets",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group1_baz0",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group1_baz0.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group1_baz1",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group1_baz1.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group1_baz2",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group1_baz2.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group1_baz3",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group1_baz3.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group2_baz0",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group2_baz0.snippets",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group2_baz0.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group2_baz1",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group2_baz1.snippets",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group2_baz1.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group2_baz2",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group2_baz2.snippets",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group2_baz2.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group2_baz3",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group2_baz3.snippets",
                "local-gitlab-latest-repos-flat-wiki-snippets/local-gitlab-group2_baz3.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_a_repo_0",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_a_repo_0.snippets",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_a_repo_0.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_a_repo_1",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_a_repo_1.snippets",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_a_repo_1.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_a_repo_2",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_a_repo_2.snippets",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_a_repo_2.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_a_repo_3",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_a_repo_3.snippets",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_a_repo_3.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_b_repo_0",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_b_repo_0.snippets",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_b_repo_0.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_b_repo_1",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_b_repo_1.snippets",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_b_repo_1.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_b_repo_2",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_b_repo_2.snippets",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_b_repo_2.wiki",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_b_repo_3",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_b_repo_3.snippets",
                "local-gitlab-latest-repos-flat-wiki-snippets/subgroup_b_repo_3.wiki"
            ]
        },
        {
            "name": "all-groups-backup-wiki",
            "description": "Test cloning all groups with backup and wiki",
            "command": "ghorg clone all-groups --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --backup --clone-wiki --output-dir=local-gitlab-latest-backup",
            "run_twice": true,
            "expected_structure": []
        },
        {
            "name": "single-user-snippets-prune-untouched",
            "description": "Test cloning single user with snippets and prune untouched",
            "command": "ghorg clone root --clone-type=user --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --clone-snippets --output-dir=local-gitlab-latest-root-user-repos-snippets --prune-untouched --prune-untouched-no-confirm",
            "run_twice": false,
            "expected_structure": []
        },
        {
            "name": "top-level-group-backup",
            "description": "Test cloning top level group with backup",
            "command": "ghorg clone local-gitlab-group1 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --backup --output-dir=local-gitlab-latest-group1-backup",
            "run_twice": true,
            "expected_structure": []
        },
        {
            "name": "top-level-group-basic-no-test",
            "description": "Test cloning top level group basic (no structure verification)",
            "command": "ghorg clone local-gitlab-group1 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --output-dir=local-gitlab-latest-group1",
            "run_twice": true,
            "expected_structure": []
        },
        {
            "name": "single-group-basic-test",
            "description": "Test cloning a single top-level group",
            "command": "ghorg clone local-gitlab-group3 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --output-dir=local-gitlab-latest-top-level-group",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-latest-top-level-group/subgroup_a_repo_0",
                "local-gitlab-latest-top-level-group/subgroup_a_repo_1",
                "local-gitlab-latest-top-level-group/subgroup_a_repo_2",
                "local-gitlab-latest-top-level-group/subgroup_a_repo_3",
                "local-gitlab-latest-top-level-group/subgroup_b_repo_0",
                "local-gitlab-latest-top-level-group/subgroup_b_repo_1",
                "local-gitlab-latest-top-level-group/subgroup_b_repo_2",
                "local-gitlab-latest-top-level-group/subgroup_b_repo_3"
            ]
        },
        {
            "name": "top-level-group-prune-untouched",
            "description": "Test cloning top level group with prune untouched",
            "command": "ghorg clone local-gitlab-group3 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --output-dir=local-gitlab-latest-top-level-group --prune-untouched --prune-untouched-no-confirm",
            "run_twice": false,
            "expected_structure": []
        },
        {
            "name": "top-level-group-preserve-scm-hostname",
            "description": "Test cloning top level group with preserve SCM hostname",
            "command": "ghorg clone local-gitlab-group3 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --output-dir=local-gitlab-latest-top-level-group --preserve-scm-hostname",
            "run_twice": true,
            "expected_structure": [
                "gitlab.example.com/local-gitlab-latest-top-level-group/subgroup_a_repo_0",
                "gitlab.example.com/local-gitlab-latest-top-level-group/subgroup_a_repo_1",
                "gitlab.example.com/local-gitlab-latest-top-level-group/subgroup_a_repo_2",
                "gitlab.example.com/local-gitlab-latest-top-level-group/subgroup_a_repo_3",
                "gitlab.example.com/local-gitlab-latest-top-level-group/subgroup_b_repo_0",
                "gitlab.example.com/local-gitlab-latest-top-level-group/subgroup_b_repo_1",
                "gitlab.example.com/local-gitlab-latest-top-level-group/subgroup_b_repo_2",
                "gitlab.example.com/local-gitlab-latest-top-level-group/subgroup_b_repo_3"
            ]
        },
        {
            "name": "top-level-group-nested-preserve-dir-output",
            "description": "Test cloning top level group with nested subgroup, preserve dir, output dir",
            "command": "ghorg clone local-gitlab-group3 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --output-dir=local-gitlab-latest-group3-preserve",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-latest-group3-preserve/subgroup-a/subgroup-b",
                "local-gitlab-latest-group3-preserve/subgroup-a/subgroup_a_repo_0",
                "local-gitlab-latest-group3-preserve/subgroup-a/subgroup_a_repo_1",
                "local-gitlab-latest-group3-preserve/subgroup-a/subgroup_a_repo_2",
                "local-gitlab-latest-group3-preserve/subgroup-a/subgroup_a_repo_3"
            ]
        },
        {
            "name": "top-level-group-nested-output-dir",
            "description": "Test cloning top level group with nested subgroup, output dir",
            "command": "ghorg clone local-gitlab-group3 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --output-dir=local-gitlab-latest-group3",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-latest-group3/subgroup_a_repo_0",
                "local-gitlab-latest-group3/subgroup_a_repo_1",
                "local-gitlab-latest-group3/subgroup_a_repo_2",
                "local-gitlab-latest-group3/subgroup_a_repo_3",
                "local-gitlab-latest-group3/subgroup_b_repo_0",
                "local-gitlab-latest-group3/subgroup_b_repo_1",
                "local-gitlab-latest-group3/subgroup_b_repo_2",
                "local-gitlab-latest-group3/subgroup_b_repo_3"
            ]
        },
        {
            "name": "top-level-group-nested-preserve-dir",
            "description": "Test cloning top level group with nested subgroup, preserve dir",
            "command": "ghorg clone local-gitlab-group3 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-group3/subgroup-a/subgroup-b",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_0",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_1",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_2",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_3"
            ]
        },
        {
            "name": "subgroup-test",
            "description": "Test cloning a subgroup with nested subgroups",
            "command": "ghorg clone local-gitlab-group3/subgroup-a --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}}",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_0",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_1",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_2",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_3",
                "local-gitlab-group3/subgroup-a/subgroup_b_repo_0",
                "local-gitlab-group3/subgroup-a/subgroup_b_repo_1",
                "local-gitlab-group3/subgroup-a/subgroup_b_repo_2",
                "local-gitlab-group3/subgroup-a/subgroup_b_repo_3"
            ]
        },
        {
            "name": "subgroup-nested-preserve-dir",
            "description": "Test cloning subgroup with nested subgroups, preserve dir",
            "command": "ghorg clone local-gitlab-group3/subgroup-a --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-group3/subgroup-a/subgroup-b",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_0",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_1",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_2",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_3"
            ]
        },
        {
            "name": "subgroup-nested-output-dir",
            "description": "Test cloning subgroup with nested subgroups, output dir",
            "command": "ghorg clone local-gitlab-group3/subgroup-a --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --output-dir=local-gitlab-latest-group3-subgroup-a",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-latest-group3-subgroup-a/subgroup_a_repo_0",
                "local-gitlab-latest-group3-subgroup-a/subgroup_a_repo_1",
                "local-gitlab-latest-group3-subgroup-a/subgroup_a_repo_2",
                "local-gitlab-latest-group3-subgroup-a/subgroup_a_repo_3",
                "local-gitlab-latest-group3-subgroup-a/subgroup_b_repo_0",
                "local-gitlab-latest-group3-subgroup-a/subgroup_b_repo_1",
                "local-gitlab-latest-group3-subgroup-a/subgroup_b_repo_2",
                "local-gitlab-latest-group3-subgroup-a/subgroup_b_repo_3"
            ]
        },
        {
            "name": "subgroup-nested-output-preserve-scm",
            "description": "Test cloning subgroup with nested subgroups, output dir, preserve SCM hostname",
            "command": "ghorg clone local-gitlab-group3/subgroup-a --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --output-dir=local-gitlab-latest-group3-subgroup-a --preserve-scm-hostname",
            "run_twice": true,
            "expected_structure": [
                "gitlab.example.com/local-gitlab-latest-group3-subgroup-a/subgroup_a_repo_0",
                "gitlab.example.com/local-gitlab-latest-group3-subgroup-a/subgroup_a_repo_1",
                "gitlab.example.com/local-gitlab-latest-group3-subgroup-a/subgroup_a_repo_2",
                "gitlab.example.com/local-gitlab-latest-group3-subgroup-a/subgroup_a_repo_3",
                "gitlab.example.com/local-gitlab-latest-group3-subgroup-a/subgroup_b_repo_0",
                "gitlab.example.com/local-gitlab-latest-group3-subgroup-a/subgroup_b_repo_1",
                "gitlab.example.com/local-gitlab-latest-group3-subgroup-a/subgroup_b_repo_2",
                "gitlab.example.com/local-gitlab-latest-group3-subgroup-a/subgroup_b_repo_3"
            ]
        },
        {
            "name": "subgroup-nested-no-output-preserve-scm",
            "description": "Test cloning subgroup with nested subgroups, no output dir, preserve SCM hostname",
            "command": "ghorg clone local-gitlab-group3/subgroup-a --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-scm-hostname",
            "run_twice": true,
            "expected_structure": [
                "gitlab.example.com/local-gitlab-group3/subgroup-a/subgroup_a_repo_0",
                "gitlab.example.com/local-gitlab-group3/subgroup-a/subgroup_a_repo_1",
                "gitlab.example.com/local-gitlab-group3/subgroup-a/subgroup_a_repo_2",
                "gitlab.example.com/local-gitlab-group3/subgroup-a/subgroup_a_repo_3",
                "gitlab.example.com/local-gitlab-group3/subgroup-a/subgroup_b_repo_0",
                "gitlab.example.com/local-gitlab-group3/subgroup-a/subgroup_b_repo_1",
                "gitlab.example.com/local-gitlab-group3/subgroup-a/subgroup_b_repo_2",
                "gitlab.example.com/local-gitlab-group3/subgroup-a/subgroup_b_repo_3"
            ]
        },
        {
            "name": "subgroup-nested-preserve-output",
            "description": "Test cloning subgroup with nested subgroups, preserve dir, output dir",
            "command": "ghorg clone local-gitlab-group3/subgroup-a --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --output-dir=local-gitlab-latest-subgroups-preserve-output",
            "run_twice": true,
            "expected_structure": [
                "local-gitlab-latest-subgroups-preserve-output/local-gitlab-group3/subgroup-a/subgroup-b",
                "local-gitlab-latest-subgroups-preserve-output/local-gitlab-group3/subgroup-a/subgroup_a_repo_0",
                "local-gitlab-latest-subgroups-preserve-output/local-gitlab-group3/subgroup-a/subgroup_a_repo_1",
                "local-gitlab-latest-subgroups-preserve-output/local-gitlab-group3/subgroup-a/subgroup_a_repo_2",
                "local-gitlab-latest-subgroups-preserve-output/local-gitlab-group3/subgroup-a/subgroup_a_repo_3"
            ]
        },
        {
            "name": "all-users-preserve-dir-basic",
            "description": "Test cloning all users with preserve dir",
            "command": "ghorg clone all-users --scm=gitlab --clone-type=user --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir",
            "run_twice": false,
            "expected_structure": [
                "gitlab.example.com/root/rootrepos0",
                "gitlab.example.com/root/rootrepos1",
                "gitlab.example.com/root/rootrepos2",
                "gitlab.example.com/root/rootrepos3"
            ]
        },
        {
            "name": "all-users-preserve-dir-scm-hostname",
            "description": "Test cloning all users with preserve dir and preserve SCM hostname",
            "command": "ghorg clone all-users --scm=gitlab --clone-type=user --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --preserve-scm-hostname",
            "run_twice": false,
            "expected_structure": [
                "gitlab.example.com/root/rootrepos0",
                "gitlab.example.com/root/rootrepos1",
                "gitlab.example.com/root/rootrepos2",
                "gitlab.example.com/root/rootrepos3"
            ]
        },
        {
            "name": "all-users-preserve-dir-output",
            "description": "Test cloning all users with preserve dir and output dir",
            "command": "ghorg clone all-users --scm=gitlab --clone-type=user --base-url={{.BaseURL}} --token={{.Token}} --output-dir=local-gitlab-latest-all-users-preserve --preserve-dir",
            "run_twice": false,
            "expected_structure": [
                "local-gitlab-latest-all-users-preserve/root/rootrepos0",
                "local-gitlab-latest-all-users-preserve/root/rootrepos1",
                "local-gitlab-latest-all-users-preserve/root/rootrepos2",
                "local-gitlab-latest-all-users-preserve/root/rootrepos3"
            ]
        },
        {
            "name": "all-users-test",
            "description": "Test cloning all users",
            "command": "ghorg clone all-users --scm=gitlab --clone-type=user --base-url={{.BaseURL}} --token={{.Token}} --output-dir=local-gitlab-latest-all-users",
            "run_twice": false,
            "expected_structure": [
                "local-gitlab-latest-all-users/rootrepos0",
                "local-gitlab-latest-all-users/rootrepos1",
                "local-gitlab-latest-all-users/rootrepos2",
                "local-gitlab-latest-all-users/rootrepos3",
                "local-gitlab-latest-all-users/testuser1-repo"
            ]
        },
        {
            "name": "user-clone-wiki-preserve-dir-consistency",
            "description": "Test that user cloning with wikis and preserve-dir produces consistent directory structure for repos and wikis",
            "command": "ghorg clone testuser1 --scm=gitlab --clone-type=user --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --clone-wiki --output-dir=testuser1-wiki-preserve-dir-test",
            "run_twice": true,
            "expected_structure": [
                "testuser1-wiki-preserve-dir-test/testuser1-repo",
                "testuser1-wiki-preserve-dir-test/testuser1-repo.wiki"
            ]
        },
        {
            "name": "group-clone-wiki-preserve-dir-consistency",
            "description": "Test group cloning with wikis preserves consistent directory structure",
            "command": "ghorg clone local-gitlab-group1 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --clone-wiki --output-dir=group1-wiki-preserve-dir-test",
            "run_twice": false,
            "expected_structure": [
                "group1-wiki-preserve-dir-test/baz0",
                "group1-wiki-preserve-dir-test/baz0.wiki",
                "group1-wiki-preserve-dir-test/baz1",
                "group1-wiki-preserve-dir-test/baz1.wiki",
                "group1-wiki-preserve-dir-test/baz2",
                "group1-wiki-preserve-dir-test/baz2.wiki",
                "group1-wiki-preserve-dir-test/baz3",
                "group1-wiki-preserve-dir-test/baz3.wiki"
            ]
        },
        {
            "name": "all-groups-clone-wiki-preserve-dir-consistency",
            "description": "Test all-groups cloning with wikis preserves consistent directory structure",
            "command": "ghorg clone all-groups --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --clone-wiki --output-dir=all-groups-wiki-preserve-dir-test",
            "run_twice": false,
            "expected_structure": [
                "all-groups-wiki-preserve-dir-test/local-gitlab-group1/baz0",
                "all-groups-wiki-preserve-dir-test/local-gitlab-group1/baz0.wiki",
                "all-groups-wiki-preserve-dir-test/local-gitlab-group1/baz1",
                "all-groups-wiki-preserve-dir-test/local-gitlab-group1/baz1.wiki",
                "all-groups-wiki-preserve-dir-test/local-gitlab-group2/baz0",
                "all-groups-wiki-preserve-dir-test/local-gitlab-group2/baz0.wiki",
                "all-groups-wiki-preserve-dir-test/local-gitlab-group3/subgroup-a/subgroup_a_repo_0",
                "all-groups-wiki-preserve-dir-test/local-gitlab-group3/subgroup-a/subgroup_a_repo_0.wiki"
            ]
        },
        {
            "name": "all-users-clone-wiki-preserve-dir-consistency",
            "description": "Test all-users cloning with wikis preserves consistent directory structure",
            "command": "ghorg clone all-users --clone-type=user --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --clone-wiki --output-dir=all-users-wiki-preserve-dir-test",
            "run_twice": false,
            "expected_structure": [
                "all-users-wiki-preserve-dir-test/root/rootrepos0",
                "all-users-wiki-preserve-dir-test/root/rootrepos0.wiki",
                "all-users-wiki-preserve-dir-test/testuser1/testuser1-repo",
                "all-users-wiki-preserve-dir-test/testuser1/testuser1-repo.wiki"
            ]
        },
        {
            "name": "single-group-snippets-hosted-instance-fix",
            "description": "Test that single group snippet cloning works on hosted instances (regression test for bug fix)",
            "command": "ghorg clone local-gitlab-group2 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --clone-snippets --output-dir=single-group-snippets-test",
            "run_twice": false,
            "expected_structure": [
                "single-group-snippets-test/baz0",
                "single-group-snippets-test/baz0.snippets",
                "single-group-snippets-test/baz1",
                "single-group-snippets-test/baz1.snippets",
                "single-group-snippets-test/baz2",
                "single-group-snippets-test/baz2.snippets",
                "single-group-snippets-test/baz3",
                "single-group-snippets-test/baz3.snippets"
            ]
        },
        {
            "name": "group-clone-snippets-preserve-dir-consistency",
            "description": "Test group cloning with snippets preserves consistent directory structure",
            "command": "ghorg clone local-gitlab-group2 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --clone-snippets --output-dir=group2-snippets-preserve-dir-test",
            "run_twice": false,
            "expected_structure": [
                "group2-snippets-preserve-dir-test/baz0",
                "group2-snippets-preserve-dir-test/baz0.snippets",
                "group2-snippets-preserve-dir-test/baz1",
                "group2-snippets-preserve-dir-test/baz1.snippets",
                "group2-snippets-preserve-dir-test/baz2",
                "group2-snippets-preserve-dir-test/baz2.snippets",
                "group2-snippets-preserve-dir-test/baz3",
                "group2-snippets-preserve-dir-test/baz3.snippets"
            ]
        },
        {
            "name": "all-groups-clone-snippets-preserve-dir-consistency",
            "description": "Test all-groups cloning with snippets preserves consistent directory structure",
            "command": "ghorg clone all-groups --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --clone-snippets --output-dir=all-groups-snippets-preserve-dir-test",
            "run_twice": false,
            "expected_structure": [
                "all-groups-snippets-preserve-dir-test/local-gitlab-group2/baz0",
                "all-groups-snippets-preserve-dir-test/local-gitlab-group2/baz0.snippets",
                "all-groups-snippets-preserve-dir-test/local-gitlab-group3/subgroup-a/subgroup_a_repo_0",
                "all-groups-snippets-preserve-dir-test/local-gitlab-group3/subgroup-a/subgroup_a_repo_0.snippets"
            ]
        },
        {
            "name": "all-users-clone-snippets-preserve-dir-consistency",
            "description": "Test all-users cloning with snippets preserves consistent directory structure",
            "command": "ghorg clone all-users --clone-type=user --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --clone-snippets --output-dir=all-users-snippets-preserve-dir-test",
            "run_twice": false,
            "expected_structure": [
                "all-users-snippets-preserve-dir-test/root/rootrepos1",
                "all-users-snippets-preserve-dir-test/root/rootrepos1.snippets",
                "all-users-snippets-preserve-dir-test/testuser1/testuser1-repo",
                "all-users-snippets-preserve-dir-test/testuser1/testuser1-repo.snippets"
            ]
        },
        {
            "name": "gitlab-group-exclude-regex-subgroup-a",
            "description": "Test GitLab group exclude regex excludes all repos from subgroup-a",
            "command": "ghorg clone local-gitlab-group3 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --gitlab-group-exclude-match-regex=\".*\\/subgroup-a($|\\/.*$)\" --output-dir=gitlab-exclude-subgroup-a-test",
            "run_twice": false,
            "expected_structure": [
            ]
        },
        {
            "name": "gitlab-group-exclude-regex-subgroup-b-only",
            "description": "Test GitLab group exclude regex excludes only repos from subgroup-b",
            "command": "ghorg clone local-gitlab-group3 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --gitlab-group-exclude-match-regex=\".*\\/subgroup-b\\/.*$\" --output-dir=gitlab-exclude-subgroup-b-only-test",
            "run_twice": false,
            "expected_structure": [
                "gitlab-exclude-subgroup-b-only-test/subgroup_a_repo_0",
                "gitlab-exclude-subgroup-b-only-test/subgroup_a_repo_1",
                "gitlab-exclude-subgroup-b-only-test/subgroup_a_repo_2",
                "gitlab-exclude-subgroup-b-only-test/subgroup_a_repo_3"
            ]
        },
        {
            "name": "gitlab-group-exclude-regex-case-insensitive",
            "description": "Test GitLab group exclude regex works with case insensitive matching",
            "command": "ghorg clone local-gitlab-group3 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --gitlab-group-exclude-match-regex=\"(?i:.*\\/subgroup-a($|\\/.*$))\" --output-dir=gitlab-exclude-case-insensitive-test",
            "run_twice": false,
            "expected_structure": [
            ]
        },
        {
            "name": "gitlab-group-exclude-regex-no-match",
            "description": "Test GitLab group exclude regex doesn't exclude when no match (baseline test)",
            "command": "ghorg clone local-gitlab-group3 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --gitlab-group-exclude-match-regex=\".*\\/nonexistent\\/.*$\" --output-dir=gitlab-exclude-no-match-test",
            "run_twice": false,
            "expected_structure": [
                "gitlab-exclude-no-match-test/subgroup_a_repo_0",
                "gitlab-exclude-no-match-test/subgroup_a_repo_1", 
                "gitlab-exclude-no-match-test/subgroup_a_repo_2",
                "gitlab-exclude-no-match-test/subgroup_a_repo_3",
                "gitlab-exclude-no-match-test/subgroup_b_repo_0",
                "gitlab-exclude-no-match-test/subgroup_b_repo_1",
                "gitlab-exclude-no-match-test/subgroup_b_repo_2",
                "gitlab-exclude-no-match-test/subgroup_b_repo_3"
            ]
        },
        {
            "_comment": "COMMENTED OUT TEST FROM ORIGINAL SCRIPT - TODO FIXME",
            "name": "root-level-snippets-test-disabled",
            "description": "Test root level snippets (DISABLED - was commented in original)",
            "command": "ghorg clone all-groups --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --clone-snippets --output-dir=local-gitlab-latest-snippets-preserve-dir-output-dir-all-groups",
            "run_twice": true,
            "disabled": true,
            "expected_structure": [
                "local-gitlab-latest-snippets-preserve-dir-output-dir-all-groups/_ghorg_root_level_snippets/snippet1-2",
                "local-gitlab-latest-snippets-preserve-dir-output-dir-all-groups/_ghorg_root_level_snippets/snippet2-3"
            ]
        },
        {
            "_comment": "COMMENTED OUT TEST FROM ORIGINAL SCRIPT",
            "name": "top-level-group-preserve-snippets-disabled",
            "description": "Test cloning top level group with nested subgroup, preserve dir, snippets (DISABLED - was commented in original)",
            "command": "ghorg clone local-gitlab-group3 --scm=gitlab --base-url={{.BaseURL}} --token={{.Token}} --preserve-dir --clone-snippets --output-dir=local-gitlab-latest-group-3-perserve-snippets",
            "run_twice": true,
            "disabled": true,
            "expected_structure": [
                "local-gitlab-group3/subgroup-a/subgroup-b",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_0",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_1",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_2",
                "local-gitlab-group3/subgroup-a/subgroup_a_repo_3"
            ]
        },
        {
            "_comment": "COMMENTED OUT TEST FROM ORIGINAL SCRIPT",
            "name": "all-users-snippets-disabled",
            "description": "Test cloning all users with output dir and snippets (DISABLED - was commented in original)",
            "command": "ghorg clone all-users --scm=gitlab --clone-type=user --base-url={{.BaseURL}} --token={{.Token}} --output-dir=local-gitlab-latest-all-users-snippets --clone-snippets",
            "run_twice": false,
            "disabled": true,
            "expected_structure": [
                "local-gitlab-latest-all-users-snippets/_ghorg_root_level_snippets",
                "local-gitlab-latest-all-users-snippets/rootrepos0",
                "local-gitlab-latest-all-users-snippets/rootrepos1",
                "local-gitlab-latest-all-users-snippets/rootrepos1.snippets",
                "local-gitlab-latest-all-users-snippets/rootrepos2",
                "local-gitlab-latest-all-users-snippets/rootrepos3",
                "local-gitlab-latest-all-users-snippets/testuser1-repo",
                "local-gitlab-latest-all-users-snippets/testuser1-repo.snippets"
            ]
        },
        {
            "_comment": "COMMENTED OUT TEST FROM ORIGINAL SCRIPT",
            "name": "all-users-snippets-preserve-scm-disabled",
            "description": "Test cloning all users with output dir, snippets, and preserve SCM hostname (DISABLED - was commented in original)",
            "command": "ghorg clone all-users --scm=gitlab --clone-type=user --base-url={{.BaseURL}} --token={{.Token}} --output-dir=local-gitlab-latest-all-users-snippets --clone-snippets --preserve-scm-hostname",
            "run_twice": false,
            "disabled": true,
            "expected_structure": [
                "gitlab.example.com/local-gitlab-latest-all-users-snippets/_ghorg_root_level_snippets",
                "gitlab.example.com/local-gitlab-latest-all-users-snippets/rootrepos0",
                "gitlab.example.com/local-gitlab-latest-all-users-snippets/rootrepos1",
                "gitlab.example.com/local-gitlab-latest-all-users-snippets/rootrepos1.snippets",
                "gitlab.example.com/local-gitlab-latest-all-users-snippets/rootrepos2",
                "gitlab.example.com/local-gitlab-latest-all-users-snippets/rootrepos3",
                "gitlab.example.com/local-gitlab-latest-all-users-snippets/testuser1-repo",
                "gitlab.example.com/local-gitlab-latest-all-users-snippets/testuser1-repo.snippets"
            ]
        }
    ]
}
